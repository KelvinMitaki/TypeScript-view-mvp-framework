{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,EAAA,GAAG,EAAE,EAAP;AAAW,EAAA,IAAI,EAAE;AAAjB,CAAT,CAAb;AACA,IAAI,CAAC,GAAL,CAAS;AAAE,EAAA,GAAG,EAAE;AAAP,CAAT;AACA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,IAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,YAAA,CAAQ,CAAzB;AACA,IAAI,CAAC,OAAL,CAAa,QAAb;ADJA,IAAA,IAAA;AAAA;AAAA,YAAA;AAEE,WAAA,IAAA,CAAoB,IAApB,EAAmC;AAAf,SAAA,IAAA,GAAA,IAAA;AADpB,SAAA,MAAA,GAAwC,EAAxC;AACuC;;AACvC,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,SAAJ,EAAqB;AACnB,WAAO,KAAK,IAAL,CAAU,SAAV,CAAP;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACnB,SAAK,IAAL,GAAS,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,KAAK,IAAb,CAAA,EAAsB,MAAtB,CAAT;AACD,GAFD;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAKA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AACA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AACD,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAmB;AAAK,aAAA,QAAQ,EAAR;AAAU,KAAnD;AACD,GAND;;AAOF,SAAA,IAAA;AArBA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n  constructor(private data: UserProps) {}\r\n  get(propsName: string): string | number {\r\n    return this.data[propsName];\r\n  }\r\n  set(update: UserProps): void {\r\n    this.data = { ...this.data, ...update };\r\n  }\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n    if (!handlers || handlers.length === 0) {\r\n      return;\r\n    }\r\n    handlers.forEach((callback: Callback) => callback());\r\n  }\r\n}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({ age: 20, name: \"Kevin\" });\r\nuser.set({ age: 21 });\r\nuser.on(\"change\", () => {\r\n  console.log(\"change #1\");\r\n});\r\nuser.on(\"change\", () => {\r\n  console.log(\"change #2\");\r\n});\r\nuser.on(\"click\", () => {});\r\nuser.trigger(\"change\");\r\n"]}